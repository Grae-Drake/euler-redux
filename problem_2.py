"""Solve Project Euler Problem 2.

Problem statement: Each new term in the Fibonacci sequence is generated by
adding the previous two terms. By starting with 1 and 2, the first 10 terms
will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

https://projecteuler.net/problem=2
"""

import argparse
from datetime import datetime


def solution(limit: int) -> int:
    """Pls no recursive Fibonacci..."""
    a = 1
    b = 2
    result = 2
    while (a + b < limit):
        a, b = b, a + b
        if b % 2 == 0:
            result += b
    return result


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("limit", help="limit, default to 100", default=100,
                    type=int, nargs='?')
    args = parser.parse_args()
    start = datetime.now()
    answer = solution(args.limit)
    end = datetime.now()
    print("The answer is {} for input {}.".format(answer, args.limit))
    print("Execution time was {}.".format(end - start))
    